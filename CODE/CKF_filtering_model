function  [Xckf,P,v,Pzminus] = CKF_filtering_model(xhat,Pminus,R,xyz,Z)

%-------------------------------------------------------------------------%
%                               1. CKF initialization                     %
%-------------------------------------------------------------------------% 

    n=9;                                                              % 9维
    m=2*n;                                                        % 容积点数
    w=1/m;                                                      % 权值w=1/m
    kmn=zeros(m,n);

    for i=1:n
       kmn(i,i)=1;
       kmn(m+1-i,n+1-i)=-1;
    end
    
    kesi=sqrt(m/2)*kmn;
    
%-------------------------------------------------------------------------%
%         2. Cholesky decomposition and prediction of observation         %
%-------------------------------------------------------------------------%

    Sminus=chol(Pminus,'lower');
  
    for cpoint=1:m
        rjpoint(:,cpoint)=Sminus*kesi(cpoint,:)'+xhat;          % 计算容积点
        vec(1:3,cpoint)=[rjpoint(1,cpoint);
                         rjpoint(4,cpoint);
                         rjpoint(7,cpoint)]-xyz;

        Zt(:,cpoint)=[norm(vec(:,cpoint));...                   
                      atan2(vec(2,cpoint), vec(1,cpoint));...
                      asin((vec(3,cpoint))/norm(vec(:,cpoint)))];
                  
%-------------------------------Restoration-------------------------------%
         if cpoint==4                                     % 4和13指向y轴的值
             if Zt(2,cpoint)-Zt(2,cpoint-1)>pi   
                 Zt(2,cpoint)=Zt(2,cpoint)-2*pi;
             else
                 if Zt(2,cpoint)-Zt(2,cpoint-1)<-pi
                     Zt(2,cpoint)=Zt(2,cpoint)+2*pi;
                 end
             end
         else
             if cpoint==13
                  if Zt(2,cpoint)-Zt(2,cpoint-1)>pi   
                      Zt(2,cpoint)=Zt(2,cpoint)-2*pi;
                  else
                        if Zt(2,cpoint)-Zt(2,cpoint-1)<-pi
                            Zt(2,cpoint)=Zt(2,cpoint)+2*pi;
                        end
                   end
             end            
         end
%--------------------------- for quadrant jump ---------------------------%        
    end    

    zhat=w*sum(Zt,2);
    Pzminus=0;
    
    for cpoint=1:m
        Pzminus=Pzminus+w*Zt(:,cpoint)*Zt(:,cpoint)';
    end
    
    Pzminus=Pzminus-zhat*zhat'+R;
    Pxzminus=0;
    
    for cpoint=1:m
        Pxzminus=Pxzminus+w*rjpoint(:,cpoint)*Zt(:,cpoint)';
    end
    
    Pxzminus=Pxzminus-xhat*zhat';
    
%-------------------------------------------------------------------------%
%                               4. update                                 %
%-------------------------------------------------------------------------% 
    
    KI=Pxzminus/Pzminus;
    v=Z-zhat;                                                        % 新息
    xhat=xhat+KI*v;                                      % 状态更新-获得信息
    P=Pminus-KI*Pzminus*KI';                            % 状态协方差矩阵更新
    Xckf=xhat;  
end
